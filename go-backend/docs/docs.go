// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/AddCompletedLesson": {
            "post": {
                "description": "Добавляет новый урок в список уроков юзера",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Lessons"
                ],
                "summary": "Добавить пройденный урок в прогресс юзера",
                "parameters": [
                    {
                        "description": "Запрос на добавление пройденного урока",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CompleteLesson"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Урок добавлен",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Lesson"
                            }
                        }
                    },
                    "500": {
                        "description": "Не удалось добавить уроки",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/GetCompletedLessons": {
            "post": {
                "description": "Возвращает все пройденные юзером уроки",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Lessons"
                ],
                "summary": "Получить пройденные уроки юзера",
                "responses": {
                    "200": {
                        "description": "Уроки получены",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Lesson"
                            }
                        }
                    },
                    "400": {
                        "description": "Не удалось найти юзера",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Не удалось получить уроки",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/GetCompletedLessonsByCourse": {
            "post": {
                "description": "Возвращает все пройденные юзером уроки в указанном курсе",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Lessons"
                ],
                "summary": "Получить пройденные уроки юзера в конкретном курсе",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID курса",
                        "name": "CourseID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Уроки получены",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Lesson"
                            }
                        }
                    },
                    "400": {
                        "description": "Не удалось найти юзера",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Не удалось получить уроки",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/add_new_promo": {
            "post": {
                "description": "Создает новый промокод для юзера.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Promo"
                ],
                "summary": "Добавить новый промокод",
                "parameters": [
                    {
                        "description": "Запрос на создание нового промокода",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.NewPromo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Промокод создан",
                        "schema": {
                            "$ref": "#/definitions/model.CodeResponse"
                        }
                    },
                    "500": {
                        "description": "Не удалось создать промокод",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/courses": {
            "get": {
                "description": "Получает список всех курсов",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Courses"
                ],
                "summary": "Получить все курсы",
                "responses": {
                    "200": {
                        "description": "Список курсов",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Lesson"
                            }
                        }
                    },
                    "500": {
                        "description": "Не удалось получить курсы",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/courses/{courseID}": {
            "get": {
                "description": "Получает курс по указанному id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Courses"
                ],
                "summary": "Получить курс",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID курса",
                        "name": "courseID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Курс по его id",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Lesson"
                            }
                        }
                    },
                    "400": {
                        "description": "Неверный ID курса",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Не удалось получить курс",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/courses/{courseID}/lessons": {
            "get": {
                "description": "Получает список уроков для определенного курса",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "Получить уроки для курса",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID курса",
                        "name": "courseID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список уроков",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Task"
                            }
                        }
                    },
                    "400": {
                        "description": "Неверный ID курса",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Не удалось получить уроки",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/forgot": {
            "post": {
                "description": "Инициирует восстановление пароля по email.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Восстановление",
                "parameters": [
                    {
                        "description": "Запрос на инициацию восстановления пользователя",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ForgotRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Процесс восстановления начат",
                        "schema": {
                            "$ref": "#/definitions/model.CodeResponse"
                        }
                    },
                    "400": {
                        "description": "Не удалось начать процесс восстановления",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/get_user_rating": {
            "post": {
                "description": "Возвращает рейтинг нужного пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Rating"
                ],
                "summary": "Получить рейтинг конкретного пользователя",
                "parameters": [
                    {
                        "description": "Запрос на получения рейтинга пользователя",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UserRating"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Рейтинг получен",
                        "schema": {
                            "$ref": "#/definitions/model.CodeResponse"
                        }
                    },
                    "400": {
                        "description": "Не удалось найти пользователя",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Не удалось получить рейтинг",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/lessons/{lessonID}": {
            "get": {
                "description": "Получает урок по указанному id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Lessons"
                ],
                "summary": "Получить урок",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID урока",
                        "name": "lessonID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Урок по его id",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Lesson"
                            }
                        }
                    },
                    "400": {
                        "description": "Неверный ID урока",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Не удалось получить урок",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/lessons/{lessonID}/tasks": {
            "get": {
                "description": "Получает список заданий для определенного урока",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "Получить задания для урока",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID урока",
                        "name": "lessonID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список заданий",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Task"
                            }
                        }
                    },
                    "400": {
                        "description": "Неверный ID урока",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Не удалось получить задания",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/login": {
            "post": {
                "description": "Авторизует пользователя с предоставленным email и паролем.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Логин",
                "parameters": [
                    {
                        "description": "Запрос на авторизацию пользователя",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Пользователь авторизован",
                        "schema": {
                            "$ref": "#/definitions/model.CodeResponse"
                        }
                    },
                    "400": {
                        "description": "Не удалось авторизовать пользователя",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/newpass": {
            "get": {
                "description": "Новый пароль для восстановления пароля по email.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Новый пароль",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Токен восстановления пароля",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Процесс восстановления завершен",
                        "schema": {
                            "$ref": "#/definitions/model.CodeResponse"
                        }
                    },
                    "400": {
                        "description": "Не удалось завершить процесс восстановления",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Сохранение нового пароля .",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Добавление нового пароля в БД",
                "parameters": [
                    {
                        "description": "Новый пароль пользователя",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.NewPassword"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Пароль сохранен",
                        "schema": {
                            "$ref": "#/definitions/model.CodeResponse"
                        }
                    },
                    "400": {
                        "description": "Не удалось сохранить пароль",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/rating": {
            "get": {
                "description": "Получает общий рейтинг пользователей",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Rating"
                ],
                "summary": "Получить рейтинг пользователей",
                "responses": {
                    "200": {
                        "description": "Рейтинг получен",
                        "schema": {
                            "$ref": "#/definitions/model.CodeResponse"
                        }
                    },
                    "500": {
                        "description": "Не удалось получить рейтинг",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/redeem_promo": {
            "post": {
                "description": "Сверяет емайл аккаунта и введенный промокод.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Promo"
                ],
                "summary": "Проверить промокод",
                "parameters": [
                    {
                        "description": "Запрос на проверку промокода",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Promo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Промокод подтвержден",
                        "schema": {
                            "$ref": "#/definitions/model.CodeResponse"
                        }
                    },
                    "500": {
                        "description": "Не удалось подтвердить промокод",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/update_user_rating": {
            "put": {
                "description": "Добавляет в рейтинг пользователя полученные баллы",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Rating"
                ],
                "summary": "Обновить рейтинг конкретного пользователя",
                "parameters": [
                    {
                        "description": "Запрос на обновление рейтинга пользователя",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Rating"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Рейтинг обновлен",
                        "schema": {
                            "$ref": "#/definitions/model.CodeResponse"
                        }
                    },
                    "400": {
                        "description": "Не удалось найти пользователя",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Не удалось обновить рейтинг",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/user_create": {
            "post": {
                "description": "Создает нового пользователя с предоставленным email, паролем и именем.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Создать нового пользователя",
                "parameters": [
                    {
                        "description": "Запрос на создание пользователя",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UserCreateRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Реферальный код",
                        "name": "referral_code",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Пользователь успешно создан",
                        "schema": {
                            "$ref": "#/definitions/model.CodeResponse"
                        }
                    },
                    "400": {
                        "description": "Не удалось создать пользователя",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/user_info": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Предоставляет информацию юзера.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Получить инфо пользователя",
                "responses": {
                    "200": {
                        "description": "Информация получена",
                        "schema": {
                            "$ref": "#/definitions/model.CodeResponse"
                        }
                    },
                    "400": {
                        "description": "Не удалось получить информацию",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/user_nickname": {
            "put": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Изменяет никнейм пользователя и сохраняет изменения в базе данных",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Изменяет никнейм пользователя",
                "parameters": [
                    {
                        "description": "New Nickname",
                        "name": "nickname",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.NewNickname"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Никнейм изменен",
                        "schema": {
                            "$ref": "#/definitions/model.CodeResponse"
                        }
                    },
                    "400": {
                        "description": "Не удалось изменить никнейм",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/user_photo": {
            "post": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Загружает фото пользователя и сохраняет URL в базе данных",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Загружает фото пользователя",
                "responses": {
                    "200": {
                        "description": "Фото загружено",
                        "schema": {
                            "$ref": "#/definitions/model.CodeResponse"
                        }
                    },
                    "400": {
                        "description": "Не удалось загрузить фото",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.CodeResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "model.CompleteLesson": {
            "type": "object",
            "properties": {
                "courseId": {
                    "type": "integer"
                },
                "lessonId": {
                    "type": "integer"
                }
            }
        },
        "model.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "model.ForgotRequest": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "model.Lesson": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lessonName": {
                    "type": "string"
                }
            }
        },
        "model.LoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "model.NewNickname": {
            "type": "object",
            "properties": {
                "nickname": {
                    "type": "string"
                }
            }
        },
        "model.NewPassword": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "model.NewPromo": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "result": {
                    "type": "string"
                }
            }
        },
        "model.Promo": {
            "type": "object",
            "properties": {
                "promo_code": {
                    "type": "string"
                }
            }
        },
        "model.Rating": {
            "type": "object",
            "properties": {
                "nickname": {
                    "type": "string"
                },
                "score": {
                    "type": "integer"
                }
            }
        },
        "model.Task": {
            "type": "object",
            "properties": {
                "audioPath": {
                    "type": "string"
                },
                "correctAnswer": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lessonID": {
                    "type": "integer"
                },
                "options": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "taskText": {
                    "type": "string"
                },
                "taskType": {
                    "type": "string"
                },
                "userAnswer": {
                    "type": "string"
                }
            }
        },
        "model.UserCreateRequest": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "model.UserRating": {
            "type": "object",
            "properties": {
                "nickname": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "CookieAuth": {
            "type": "apiKey",
            "name": "Authtoken",
            "in": "cookie"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "TatarByHack Service API",
	Description:      "tatarby.shmyaks.ru API",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
